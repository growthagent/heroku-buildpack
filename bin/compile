#!/usr/bin/env bash
# vim: filetype=sh
# bin/compile <build-dir> <cache-dir> <env-dir>
set -euo pipefail

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd "$(dirname "${0:-}")"; cd ..; pwd)

indent() {
  sed -u 's/^/       /'
}

starz() {
  # TODO: delete
  echo "******************************************************"
}

export ASDF_DIR="$BUILD_DIR/.asdf"
export ASDF_DATA_DIR="$ASDF_DIR"
echo $ASDF_DIR
echo $ASDF_DATA_DIR
starz
ASDF_CACHE_DIR="$CACHE_DIR/asdf"
if [ -f "$BUILD_DIR/.tool-versions" ]; then
  ASDF_VERSION="$(awk -F ' ' '{ if (match($1, "asdf")) {print $2} }' $BUILD_DIR/.tool-versions)"
fi
ASDF_VERSION=${ASDF_VERSION:-'0.7.8'}

mkdir -p "$ASDF_DIR"

# Copying from cache
if [ -d "$ASDF_CACHE_DIR" ]; then
  if [ -f "${ASDF_CACHE_DIR}/asdf.sh" -a -x "${ASDF_CACHE_DIR}/bin/asdf" ]; then
    echo "-----> Copying and sourcing asdf cache"
    cp -Trf "$ASDF_CACHE_DIR" "${ASDF_DIR}/"
    . "${ASDF_DIR}/asdf.sh"
  else
    echo "-----> Fresh state, missing scripts, or different versions in asdf cache; removing"
    rm -rf "$ASDF_CACHE_DIR"
    mkdir -p "$ASDF_CACHE_DIR"
  fi
else
  mkdir -p "$ASDF_CACHE_DIR"
fi

# if missing/fresh or we sourced asdfâ€™s shell script, and we donâ€™t have an asdf, time to (re)install
if [ -z "$(command -v asdf)" -o "$(asdf --version | awk -F '-' '{print $1}')" != "v${ASDF_VERSION}" ]; then
  echo "-----> Installing asdf v${ASDF_VERSION}"
  rm -rf "$ASDF_DIR"
  git clone --quiet --depth=1 https://github.com/asdf-vm/asdf.git "$ASDF_DIR" --branch "v${ASDF_VERSION}" | indent
  . "$ASDF_DIR/asdf.sh"
else
  echo "-----> Using asdf v${ASDF_VERSION}"
fi

source $BP_DIR/lib/asdf-plugins.sh

# TODO: delete
echo "ls ASDF_CACHE_DIR"
ls "${ASDF_DIR}"
echo -n ">>> "
if [ -d "${ASDF_DIR}/installs" ]; then
  echo "ls installs"
  ls "${ASDF_DIR}/installs"
else
  echo "no installs"
fi
echo -n ">>> "
if [ -d "${ASDF_DIR}/plugins" ]; then
  echo "ls plugins"
  ls "${ASDF_DIR}/plugins"
else
  echo "no plugins"
fi
starz


echo "-----> Install asdf plugins"
if ! [ -f ".tool-versions" ] && [ -f "$BUILD_DIR/.tool-versions" ]; then
  echo "cp" | indent
  cp "$BUILD_DIR/.tool-versions" .
fi
asdf install | indent

# TODO: delete
echo "ls ASDF_DIR"
ls "${ASDF_DIR}"
echo -n ">>> "
if [ -d "${ASDF_DIR}/installs" ]; then
  echo "ls installs"
  ls "${ASDF_DIR}/installs"
else
  echo "no installs"
fi
echo -n ">>> "
if [ -d "${ASDF_DIR}/installs/dhall" ]; then
  echo "ls installs/dhall"
  ls "${ASDF_DIR}/installs/dhall"
else
  echo "no installs/dhall"
fi
echo -n ">>> "
if [ -d "${ASDF_DIR}/installs/dhall/1.34.0/bin" ]; then
  echo "ls installs/dhall/1.34.0/bin"
  ls "${ASDF_DIR}/installs/dhall/1.34.0/bin"
else
  echo "no installs/dhall/1.34.0/bin"
fi
echo -n ">>> "
if [ -d "${ASDF_DIR}/plugins" ]; then
  echo "ls plugins"
  ls "${ASDF_DIR}/plugins"
else
  echo "no plugins"
fi
starz

echo "-----> Coping asdf over to cache"
cp -Trf "$ASDF_DIR" "$ASDF_CACHE_DIR/"

# TODO: delete
echo "ls ASDF_CACHE_DIR"
ls "${ASDF_CACHE_DIR}"
echo -n ">>> "
if [ -d "${ASDF_CACHE_DIR}/installs" ]; then
  echo "ls installs"
  ls "${ASDF_CACHE_DIR}/installs"
else
  echo "no installs"
fi
echo -n ">>> "
if [ -d "${ASDF_CACHE_DIR}/installs/dhall/1.34.0/bin" ]; then
  echo "ls installs/dhall/1.34.0/bin"
  ls "${ASDF_CACHE_DIR}/installs/dhall/1.34.0/bin"
else
  echo "no installs/dhall/1.34.0/bin"
fi
echo -n ">>> "
if [ -d "${ASDF_CACHE_DIR}/plugins" ]; then
  echo "ls plugins"
  ls "${ASDF_DIR}/plugins"
else
  echo "no plugins"
fi
echo -n ">>> "
if [ -d "${ASDF_CACHE_DIR}/bin" ]; then
  echo "ls bin"
  ls "${ASDF_DIR}/bin"
else
  echo "no bin"
fi
echo -n ">>> "
if [ -d "${ASDF_CACHE_DIR}/shims" ]; then
  echo "ls shims"
  ls "${ASDF_DIR}/shims"
else
  echo "no shims"
fi
starz

echo "-----> Creating asdf .profile.d script"
ASDF_REL_DIR="$(realpath --relative-to="$BUILD_DIR" "$ASDF_DIR")"
mkdir -p "$BUILD_DIR/.profile.d"
cat << EOF > "$BUILD_DIR/.profile.d/asdf.sh"
# add asdf dirs to \$PATH
export ASDF_DIR="\$HOME/${ASDF_REL_DIR}"
export ASDF_DATA_DIR="\$HOME/${ASDF_REL_DIR}"
export PATH="\$HOME/${ASDF_REL_DIR}/shims:\$HOME/${ASDF_REL_DIR}/bin:\$PATH"

# bash completions for debugging
[ -z "\$BASH_VERSION" ] && . \$HOME/${ASDF_REL_DIR}/completions/asdf.bash

. "\$ASDF_REL_DIR/asdf.sh"

# verify asdf is installed and reinstall missing plugins
if ! command -v asdf > /dev/null 2>&1; then
  echo "asdf not installed ðŸ¤”"
  exit 1
fi

$(cat $BP_DIR/lib/asdf-plugins.sh)

asdf install
asdf reshim
EOF

if [ -w "$BP_DIR" ]; then
  echo "-----> Creating asdf export script"
  echo "export PATH=\"\$HOME/${ASDF_REL_DIR}/shims:\$HOME/${ASDF_REL_DIR}/bin:\$PATH\"" > "${BP_DIR}/export"
fi

exit 0
